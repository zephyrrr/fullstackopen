{"version":3,"sources":["components/Filter.js","services/persons.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","newPersonFilter","setNewPersonFilter","value","onChange","event","target","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","PersonForm","persons","setPersons","setErrorMessage","setInfoMessage","useState","newName","setNewName","newPhone","setNewPhone","onSubmit","preventDefault","name","number","idx","map","person","indexOf","window","confirm","personService","returnedPerson","setTimeout","catch","error","filter","n","newPerson","concat","type","Person","onClick","Persons","key","Notification","message","className","App","infoMessage","errorMessage","useEffect","initialPersons","personsToShow","toLowerCase","startsWith","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15dbb30e.chunk.js","sourcesContent":["import React  from 'react'\r\n\r\n\r\nconst Filter = ({ newPersonFilter, setNewPersonFilter }) => {\r\n    return (\r\n        <div>\r\n            filter shown with <input \r\n                value={newPersonFilter}\r\n                onChange={(event) => setNewPersonFilter(event.target.value)} />\r\n        </div>\r\n    )\r\n}\r\n  \r\nexport default Filter","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst del = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, del }","import React, { useState }  from 'react'\r\nimport personService from '../services/persons'\r\n\r\n\r\nconst PersonForm = ({ persons, setPersons, setErrorMessage, setInfoMessage }) => {\r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newPhone, setNewPhone ] = useState('')\r\n\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n\r\n        const newObject = {\r\n            name: newName,\r\n            number: newPhone\r\n        }\r\n\r\n        const idx = persons.map(person => person.name).indexOf(newName)\r\n        if (idx >= 0) {\r\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n                personService.update(persons[idx].id, newObject)\r\n                    .then(returnedPerson => {\r\n                        setPersons(persons.map(person => person.id !== persons[idx].id ? person : returnedPerson))\r\n                        setInfoMessage(`Updated '${returnedPerson.name}'`)\r\n                        setTimeout(() => {\r\n                            setInfoMessage(null)\r\n                        }, 5000)\r\n                    })\r\n                    .catch(error => {\r\n                        setErrorMessage(`Infomation of '${persons[idx].name}' has already been removed from server`)\r\n                        setPersons(persons.filter(n => n.id !== persons[idx].id))\r\n                        setTimeout(() => {\r\n                            setErrorMessage(null)\r\n                        }, 5000)\r\n                    })\r\n            }\r\n            return\r\n        }\r\n        \r\n        personService.create(newObject)\r\n            .then(newPerson => {\r\n                setPersons(persons.concat(newPerson))\r\n                setNewName('')\r\n                setNewPhone('')\r\n                setInfoMessage(`Added '${newPerson.name}'`)\r\n                setTimeout(() => {\r\n                    setInfoMessage(null)\r\n                }, 5000)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={addPerson}>\r\n            <div>\r\n            name: <input \r\n                value={newName}\r\n                onChange={(event) => setNewName(event.target.value)} />\r\n            </div>\r\n            <div>\r\n            number: <input \r\n                value={newPhone}\r\n                onChange={(event) => setNewPhone(event.target.value)} />\r\n            </div>\r\n            <div>\r\n            <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n  \r\nexport default PersonForm","import React from 'react'\r\nimport personService from '../services/persons'\r\n\r\nconst Person = ({ person, persons, setPersons }) => {\r\n  const deletePerson = (event) => {\r\n    if (window.confirm(`Delete ${person.name}`)) { \r\n      personService.del(person.id)\r\n        .then( () => {\r\n          setPersons(persons.filter(n => n.id !== person.id))\r\n        })\r\n        .catch( () =>{})\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p>\r\n        {person.name} {person.number}\r\n        <button onClick={deletePerson}>delete</button> \r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({ persons, setPersons }) => {\r\n    return (\r\n        <div>\r\n        {persons.map(person => \r\n            <Person key={person.name} person={person} persons={persons} setPersons={setPersons} />\r\n        )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\n\r\nconst Notification = ({ message, className }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={className}>\r\n        {message}\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\n\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport Notification from './components/Notification'\r\nimport personService from './services/persons'\r\n\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([ ]) \r\n  const [ newPersonFilter, setNewPersonFilter ] = useState('')\r\n  const [infoMessage, setInfoMessage] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons  => {\r\n        setPersons(initialPersons)\r\n      })\r\n  }, [])\r\n\r\n  const personsToShow = !newPersonFilter\r\n    ? persons\r\n    : persons.filter(person => person.name.toLowerCase().startsWith(newPersonFilter.toLowerCase()))\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={infoMessage} className=\"info\"/>\r\n      <Notification message={errorMessage} className=\"error\"/>\r\n\r\n      <Filter newPersonFilter={newPersonFilter} setNewPersonFilter={setNewPersonFilter} />\r\n      \r\n      <h3>add a new</h3>\r\n      <PersonForm \r\n        persons={persons} setPersons={setPersons} setInfoMessage={setInfoMessage} setErrorMessage={setErrorMessage}\r\n      />\r\n\r\n      <h3>Numbers</h3>\r\n      <Persons persons={personsToShow}  setPersons={setPersons}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}